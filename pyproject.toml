[project]
name = "finance-bro"
version = "0.2.36"
description = "AI-powered financial analysis tool for Vietnamese stock market"
requires-python = ">=3.12,<3.13"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy>=2.0.0,<3.0.0",
    "pandas>=2.2.0,<3.0.0",
    "vnstock>=3.2.6",
    "openai>=1.61.0",
    "streamlit>=1.49.0",
    "python-dotenv==1.0.1",
    "mplfinance>=0.12.10b0",
    "altair>=5.5.0",
    "pyportfolioopt>=1.5.6",
    "Authlib>=1.3.2",
    "riskfolio-lib>=7.0.1",
    "quantstats>=0.0.77",
    "pandas-ta==0.4.71b0",
    "scipy>=1.11.0",
    "vl-convert-python>=1.6.0",
    "crewai>=0.35.8",
    "plotly>=5.17.0",
    "osqp>=0.6.3",
]

[project.optional-dependencies]
dev = [
    "pytest==8.3.2",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black==24.4.2",
    "ruff>=0.8.0",
    "mypy==1.11.1",
]

[dependency-groups]
dev = [
    "ipykernel>=6.30.0",
    "jupyterlab>=4.0.0",
    "notebook>=7.0.0",
]

[tool.ruff]
# Set the maximum line length to 88 (same as Black)
line-length = 88
# Target Python 3.12 (updated from 3.10.11)
target-version = "py312"
# Enable preview features for cutting-edge rules
preview = true
# Show fixes for better developer experience
show-fixes = true
# Cache directory for performance
cache-dir = ".ruff_cache"
# Exclude common directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pycache__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "cache",
    "exports",
    "Reference",
]

[tool.ruff.lint]
# Comprehensive rule selection for LLM-generated code quality
select = [
    # Pyflakes - Essential Python errors (F-rules)
    "F",      # All PyFlakes rules (includes F401, F841, F821, F811, F822, F823)
    
    # pycodestyle - Python style issues
    "E4",     # Import-related errors
    "E7",     # Statement-related errors  
    "E9",     # Runtime syntax errors
    "E101",   # Indentation contains mixed spaces and tabs
    
    # pycodestyle warnings - Common LLM formatting issues
    "W",      # All pycodestyle warnings (includes W291, W292, W293, W391)
    
    # flake8-bugbear - Modern Python best practices
    "B",      # B0xx series for common bugs and design issues
    
    # pyupgrade - Modern Python syntax
    "UP",     # UPxxx series for Python modernization
    
    # flake8-simplify - Code simplification opportunities
    "SIM",    # SIMxxx series for code simplification
    
    # flake8-comprehensions - Better list/dict comprehensions
    "C4",     # C4xx series for comprehension improvements
    
    # flake8-unused-arguments - Unused function arguments
    "ARG",    # ARGxxx series for unused arguments
    
    # flake8-use-pathlib - Modern path handling
    "PTH",    # PTHxxx series for pathlib usage
    
    # flake8-type-checking - Type checking improvements
    "TCH",    # TCHxxx series for type checking
    
    # isort - Import sorting (configured separately)
    "I",      # Ixxx series for import organization
    
    # NumPy 2.0 compatibility rules
    "NPY201", # NumPy 2.0 deprecations and compatibility
]
# Ignore specific rules that are not relevant
ignore = [
    "E501",   # Line too long (handled by formatter)
    "B008",   # Do not perform function calls in argument defaults
    "UP007",  # Use X | Y for union types (may conflict with existing code)
]
# Allow fix for all enabled rules
fixable = ["ALL"]
unfixable = []
# Allow unsafe fixes for beneficial modernizations
extend-unsafe-fixes = ["UP006", "UP007", "UP035"]
# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Task tags for TODO/FIXME management
task-tags = ["TODO", "FIXME", "XXX", "HACK"]

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]
# Allow unused variables in test files
"tests/**/*.py" = ["F401", "F841", "ARG001", "ARG002"]
# Allow unused variables in example/demo files
"examples/**/*.py" = ["F401", "F841"]
# Allow unused variables in scripts
"scripts/**/*.py" = ["F841"]
# Allow unused variables in documentation files
"docs/**/*.py" = ["F401", "F841"]
# Allow specific patterns in legacy code (if any)
"src/legacy/**/*.py" = ["F401", "F841"]

[tool.ruff.format]
# Use double quotes for strings (same as Black)
quote-style = "double"
# Indent with spaces (same as Black)
indent-style = "space"
# Respect magic trailing commas (same as Black)
skip-magic-trailing-comma = false
# Automatically detect line ending (same as Black)
line-ending = "auto"
# Enable docstring code formatting
docstring-code-format = true

[tool.ruff.lint.mccabe]
# Set maximum complexity
max-complexity = 10

[tool.ruff.lint.isort]
# Configure import sorting to match project structure
known-first-party = ["src", "pages", "tests"]
force-single-line = false
lines-after-imports = 2
